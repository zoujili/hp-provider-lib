---
swagger: "2.0"
info:
  description: "Authorization Service manages RBAC and ABAC policies"
  version: "0.0.1"
  title: "Authorization Service"
  contact:
    name: "XiHe"
    email: "xi.he@hp.com"
host: "hpbp-authz-service.hpbp"
basePath: "/hpbp-authz/v1"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /authorizations:
    post:
      tags:
      - "authorization"
      summary: "AuthorizeRequest"
      description: "Authoriza request on both RBAC and ABAC."
      operationId: "AuthorizeRequest"
      consumes: []
      parameters:
      - name: "rbac"
        in: "query"
        description: "Specify if RBAC check is needed for this request. The value\
          \ must be one of true or false. Default is true."
        required: false
        type: "string"
        x-example: "true"
        x-exportParamName: "Rbac"
        x-optionalDataType: "String"
      - name: "abac"
        in: "query"
        description: "Specify if ABAC check is needed for this request. The value\
          \ must be one of true or false. Default is true."
        required: false
        type: "string"
        x-example: "true"
        x-exportParamName: "Abac"
        x-optionalDataType: "String"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AuthorizationRequest"
        x-exportParamName: "Body"
      responses:
        "200":
          description: "Status 200"
          schema:
            $ref: "#/definitions/AuthorizationResult"
        "400":
          description: "Status 400"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Status 403"
          schema:
            $ref: "#/definitions/Error"
        "500":
          description: "Status 500"
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  HTTP_BASIC:
    description: "All GET methods are public, meaning that *you can read all the data*.\
      \ Write operations require authentication and therefore are forbidden to the\
      \ general public."
    type: "basic"
  OAuth2:
    type: "oauth2"
    authorizationUrl: "https://use1c.ing.dev.fitstation4me.com/oauth/api/v1/auth"
    tokenUrl: "https://use1c.ing.dev.fitstation4me.com/oauth/api/v1/token"
    flow: "accessCode"
    scopes:
      hp-authz-service:create_role: "create a role"
      hp-authz-service:update_role: "update a role"
      hp-authz-service:delete_role: "delete a role"
      hp-authz-service:batch_create_permission: "batch create permissions"
      hp-authz-service:delete_permission: "delete a permission"
      hp-authz-service:update_user_role: "update user orle"
      hp-authz-service:update_user_scope: "update user scope"
      hp-authz-service:create_policy: "create a policy"
      hp-authz-service:delete_policy: "delete a policy"
      hp-authz-service:update_policy: "update a policy"
definitions:
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
  AuthorizationRequest:
    type: "object"
    required:
    - "principal"
    - "request"
    - "resource"
    properties:
      principal:
        $ref: "#/definitions/AuthorizationRequest_principal"
      resource:
        $ref: "#/definitions/AuthorizationRequest_resource"
      request:
        $ref: "#/definitions/AuthorizationRequest_request"
      context:
        type: "object"
        description: "Service specific context that will be used in OPA policy. Authz\
          \ assigns it to  input.context. Services specific polices can refer to input.context."
        properties: {}
    example: "{\n  \"principal\": {\n\t\"id\": \"12\",\n\t\"roles\": [\n\t\t\"123\"\
      ,\n\t\t\"23\"\n\t\t],\n\t\"scopes\": [\n\t\t\"123\",\n\t\t\"23\"\n\t\t],\n\t\
      \"permissions\": [\n\t\t\"1233\",\n\t\t\"456\"\n\t\t],\n\t\"type\": \"user\"\
      \n\t},\n  \"resource\": {\n\t\"id\": \"12343\"\n\t},\n  \"request\": {\n\t\"\
      method\": \"PUT\",\n\t\"path\": \"http://company-service/api/v1/commpanys/1234\"\
      ,\n\t\"organization_id\": \"e9aafddf-ab12-4568-b5c8-4ae04d26ef0f\"\n\t},\n \
      \ \"context\":{\n    \"target_service\":\"company-service\",\n    \"source_service\"\
      :\"user-service\"\n  }\n}"
  AuthorizationResult:
    type: "object"
    properties:
      allow:
        type: "boolean"
        description: "If this request is allowed."
        x-omitempty: false
    example:
      allow: true
  AuthorizationRequest_principal:
    type: "object"
    required:
    - "type"
    properties:
      id:
        type: "string"
      roles:
        type: "array"
        description: "Array of role ids. Array of permissions ids. It could be empty.\
          \ In this case, Authz service will look up roles from DB."
        items:
          type: "string"
      scopes:
        type: "array"
        items:
          type: "string"
      permissions:
        type: "array"
        description: "Array of permissions ids. It could be empty. In this case, Authz\
          \ service will look up permissions from DB."
        items:
          type: "string"
      type:
        type: "string"
        description: "Type of principal. E.g. \"user\", \"client\"."
        enum:
        - "user"
        - "client"
  AuthorizationRequest_resource:
    type: "object"
    properties:
      id:
        type: "string"
        description: "resource id"
      name:
        type: "string"
        description: "resource name defined in metadata. E.g. company, store..."
  AuthorizationRequest_request:
    type: "object"
    properties:
      method:
        type: "string"
      organization_id:
        type: "string"
      external_organization_id:
        type: "string"
        description: "external_organization_id and organization_id just require one\
          \ out of two parameter"
      path:
        type: "string"
        description: "Full path of a request.E.g. /company-service/api/v1/commpanys/1234"
